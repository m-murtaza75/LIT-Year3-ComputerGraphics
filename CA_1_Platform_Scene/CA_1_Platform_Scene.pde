//Background Buildings points

/* Building 1 shape points */
/* BACK */
float[] p1 =  {50.0, 25.0,  0.0, 1.0};
float[] p2 =  {100.0, 25.0, 0.0, 1.0};
float[] p3 =  {100.0, 30.0, 0.0, 1.0};
float[] p4 =  {95.0, 30.0,  0.0, 1.0};
float[] p5 =  {95.0,  45.0, 0.0, 1.0};
float[] p6 =  {110.0, 55.0, 0.0, 1.0};
float[] p7 =  {110.0, 60.0, 0.0, 1.0};
float[] p8 =  {105.0, 60.0, 0.0, 1.0};
float[] p9 =  {105.0, 75.0, 0.0, 1.0};
float[] p10 = {120.0, 85.0, 0.0, 1.0};
float[] p11 = {120.0, 90.0, 0.0, 1.0};
float[] p12 = {115.0, 90.0, 0.0, 1.0};
float[] p13 = {115.0, 125.0,0.0, 1.0};
float[] p14 = {40.0,  125.0,0.0, 1.0};
float[] p15 = {40.0,  60.0, 0.0, 1.0};
float[] p16 = {35.0,  60.0, 0.0, 1.0};
float[] p17 = {35.0,  55.0, 0.0, 1.0};
float[] p18 = {50.0,  45.0, 0.0, 1.0};
/* FRONT */
float[] p19 =  {50.0, 25.0,  3.0, 1.0};
float[] p20 =  {100.0, 25.0, 3.0, 1.0};
float[] p21 =  {100.0, 30.0, 3.0, 1.0};
float[] p22 =  {95.0, 30.0,  3.0, 1.0};
float[] p23 =  {95.0,  45.0, 3.0, 1.0};
float[] p24 =  {110.0, 55.0, 3.0, 1.0};
float[] p25 =  {110.0, 60.0, 3.0, 1.0};
float[] p26 =  {105.0, 60.0, 3.0, 1.0};
float[] p27 =  {105.0, 75.0, 3.0, 1.0};
float[] p28 = {120.0, 85.0,  3.0, 1.0};
float[] p29 = {120.0, 90.0,  3.0, 1.0};
float[] p30 = {115.0, 90.0,  3.0, 1.0};
float[] p31 = {115.0, 125.0, 3.0, 1.0};
float[] p32 = {40.0,  125.0, 3.0, 1.0};
float[] p33 = {40.0,  60.0,  3.0, 1.0};
float[] p34 = {35.0,  60.0,  3.0, 1.0};
float[] p35 = {35.0,  55.0,  3.0, 1.0};
float[] p36 = {50.0,  45.0,  3.0, 1.0};



/* Character shape points */
/* BACK */
float[] p37 = {35.0, 185.0, 0.0, 1.0};
float[] p38 = {90.0, 185.0, 0.0, 1.0};
float[] p39 = {75.0, 200.0, 0.0, 1.0};
float[] p40 = {90.0, 215.0, 0.0, 1.0};
float[] p41 = {85.0, 220.0, 0.0, 1.0};
float[] p42 = {75.0, 205.0, 0.0, 1.0};
float[] p43 = {75.0, 240.0, 0.0, 1.0};
float[] p44 = {70.0, 240.0, 0.0, 1.0};
float[] p45 = {70.0, 225.0, 0.0, 1.0};
float[] p46 = {55.0, 225.0, 0.0, 1.0};
float[] p47 = {55.0, 240.0, 0.0, 1.0};
float[] p48 = {50.0, 240.0, 0.0, 1.0};
float[] p49 = {50.0, 205.0, 0.0, 1.0};
float[] p50 = {40.0, 220.0, 0.0, 1.0};
float[] p51 = {35.0, 215.0, 0.0, 1.0};
float[] p52 = {50.0, 200.0, 0.0, 1.0};

/* FRONT */
float[] p53 = {35.0, 185.0, 2.0, 1.0};
float[] p54 = {90.0, 185.0, 2.0, 1.0};
float[] p55 = {75.0, 200.0, 2.0, 1.0};
float[] p56 = {90.0, 215.0, 2.0, 1.0};
float[] p57 = {85.0, 220.0, 2.0, 1.0};
float[] p58 = {75.0, 205.0, 2.0, 1.0};
float[] p59 = {75.0, 240.0, 2.0, 1.0};
float[] p60 = {70.0, 240.0, 2.0, 1.0};
float[] p61 = {70.0, 225.0, 2.0, 1.0};
float[] p62 = {55.0, 225.0, 2.0, 1.0};
float[] p63 = {55.0, 240.0, 2.0, 1.0};
float[] p64 = {50.0, 240.0, 2.0, 1.0};
float[] p65 = {50.0, 205.0, 2.0, 1.0};
float[] p66 = {40.0, 220.0, 2.0, 1.0};
float[] p67 = {35.0, 215.0, 2.0, 1.0};
float[] p68 = {50.0, 200.0, 2.0, 1.0};



/* SkateBoard shape points */

float[] p69 = {300.0, 225.0, 0.0, 1.0};
float[] p70 = {305.0, 220.0, 0.0, 1.0};
float[] p71 = {315.0, 230.0, 0.0, 1.0};
float[] p72 = {365.0, 230.0, 0.0, 1.0};
float[] p73 = {375.0, 220.0, 0.0, 1.0};
float[] p74 = {380.0, 225.0, 0.0, 1.0};
float[] p75 = {370.0, 235.0, 0.0, 1.0};
float[] p76 = {310.0, 235.0, 0.0, 1.0};

/* FRONT */
float[] p77 = {300.0, 225.0, 2.0, 1.0};
float[] p78 = {305.0, 220.0, 2.0, 1.0};
float[] p79 = {315.0, 230.0, 2.0, 1.0};
float[] p80 = {365.0, 230.0, 2.0, 1.0};
float[] p81 = {375.0, 220.0, 2.0, 1.0};
float[] p82 = {380.0, 225.0, 2.0, 1.0};
float[] p83 = {370.0, 235.0, 2.0, 1.0};
float[] p84 = {310.0, 235.0, 2.0, 1.0};

 

void setup() 
{
  size(1000, 400, P3D);
  stroke(255);
  smooth();

 /*    cos(theta) -sin(theta)   0
    =  sin(theta)  cos(theta)   0
           0             0      1
 */
  
  noLoop();
  
  frameRate(1);
}


void draw() 
{
  /* 
  By commenting the background() call out, 
  the background is not refreshed, 
  so each transformation can be seen.
  background(102);
  */
  
  background(57, 55, 219);
  
  buildings();
  
  character();
  
  skateBoard();
}

float[] transform_point(float[][] m, float[] p)
{

    float[] p_new = {0.0,0.0,0.0,0.0}; // handle 4 elements as its 3D calc
   
    p_new[0] = m[0][0] * p[0] + m[1][0] * p[1] + m[2][0] * p[2] + m[3][0]*p[3];
    p_new[1] = m[0][1] * p[0] + m[1][1] * p[1] + m[2][1] * p[2]+ m[3][1]*p[3];
    p_new[2] = m[0][2] * p[0] + m[1][2] * p[1] + m[2][2] * p[2] +m[3][2]*p[3]; 
    p_new[3] = m[0][3] * p[0] + m[1][3] * p[1] + m[2][3] * p[2] +m[3][3]*p[3]; 
  
    return p_new;
}



/* Multiply two matrices together to combine their effect */
float[][] mult_matrix(float[][] m1, float[][] m2)
{

    float[][] m_new = {{0.0,0.0,0.0,0.0},{0.0,0.0,0.0,0.0},{0.0,0.0,0.0,0.0},{0.0,0.0,0.0,0.0}};
   
    m_new[0][0] = m1[0][0] * m2[0][0] + m1[1][0] * m2[0][1] + m1[2][0] * m2[0][2] + m1[3][0] * m2[0][3];
    m_new[0][1] = m1[0][1] * m2[0][0] + m1[1][1] * m2[0][1] + m1[2][1] * m2[0][2] + m1[3][1] * m2[0][3];
    m_new[0][2] = m1[0][2] * m2[0][0] + m1[1][2] * m2[0][1] + m1[2][2] * m2[0][2] + m1[3][2] * m2[0][3];
    m_new[0][3] = m1[0][3] * m2[0][0] + m1[1][3] * m2[0][1] + m1[2][3] * m2[0][2] + m1[3][3] * m2[0][3];

    m_new[1][0] = m1[0][0] * m2[1][0] + m1[1][0] * m2[1][1] + m1[2][0] * m2[1][2] + m1[3][0] * m2[1][3];
    m_new[1][1] = m1[0][1] * m2[1][0] + m1[1][1] * m2[1][1] + m1[2][1] * m2[1][2] + m1[3][1] * m2[1][3];
    m_new[1][2] = m1[0][2] * m2[1][0] + m1[1][2] * m2[1][1] + m1[2][2] * m2[1][2] + m1[3][2] * m2[1][3];
    m_new[1][3] = m1[0][3] * m2[1][0] + m1[1][3] * m2[1][1] + m1[2][3] * m2[1][2] + m1[3][3] * m2[1][3];


    m_new[2][0] = m1[0][0] * m2[2][0] + m1[1][0] * m2[2][1] + m1[2][0] * m2[2][2] + m1[3][0] * m2[2][3];
    m_new[2][1] = m1[0][1] * m2[2][0] + m1[1][1] * m2[2][1] + m1[2][1] * m2[2][2] + m1[3][1] * m2[2][3];
    m_new[2][2] = m1[0][2] * m2[2][0] + m1[1][2] * m2[2][1] + m1[2][2] * m2[2][2] + m1[3][2] * m2[2][3];
    m_new[2][3] = m1[0][3] * m2[2][0] + m1[1][3] * m2[2][1] + m1[2][3] * m2[2][2] + m1[3][3] * m2[2][3];
   
    m_new[3][0] = m1[0][0] * m2[3][0] + m1[1][0] * m2[3][1] + m1[2][0] * m2[3][2] + m1[3][0] * m2[3][3];
    m_new[3][1] = m1[0][1] * m2[3][0] + m1[1][1] * m2[3][1] + m1[2][1] * m2[3][2] + m1[3][1] * m2[3][3];
    m_new[3][2] = m1[0][2] * m2[3][0] + m1[1][2] * m2[3][1] + m1[2][2] * m2[3][2] + m1[3][2] * m2[3][3];
    m_new[3][3] = m1[0][3] * m2[3][0] + m1[1][3] * m2[3][1] + m1[2][3] * m2[3][2] + m1[3][3] * m2[3][3];
  
    return m_new;
}



void buildings() 
{
  /* BACK */
  line(p1[0],p1[1],p1[2], p2[0],p2[1],p2[2]);   
  line(p2[0],p2[1],p2[2], p3[0],p3[1],p3[2]);   
  line(p3[0],p3[1],p3[2], p4[0],p4[1],p4[2]);   
  line(p4[0],p4[1],p4[2], p5[0],p5[1],p5[2]);   
  line(p5[0],p5[1],p5[2], p6[0],p6[1],p6[2]);   
  line(p6[0],p6[1],p6[2], p7[0],p7[1],p7[2]);    
  line(p7[0],p7[1],p7[2], p8[0],p8[1],p8[2]);   
  line(p8[0],p8[1],p8[2], p9[0],p9[1],p9[2]);   
  line(p9[0],p9[1],p9[2], p10[0],p10[1],p10[2]);
  line(p10[0],p10[1],p10[2], p11[0],p11[1],p11[2]);
  line(p11[0],p11[1],p11[2], p12[0],p12[1],p12[2]);
  line(p12[0],p12[1],p12[2], p13[0],p13[1],p13[2]);
  line(p13[0],p13[1],p13[2], p14[0],p14[1],p14[2]);
  line(p14[0],p14[1],p14[2], p15[0],p15[1],p15[2]);
  line(p15[0],p15[1],p15[2], p16[0],p16[1],p16[2]);
  line(p16[0],p16[1],p16[2], p17[0],p17[1],p17[2]);
  line(p17[0],p17[1],p17[2], p18[0],p18[1],p18[2]);
  line(p18[0],p18[1],p18[2], p1[0],p1[1],p1[2]);
  
  /* FRONT */
  line(p19[0],p19[1],p19[2], p20[0],p20[1],p20[2]);
  line(p20[0],p20[1],p20[2], p21[0],p21[1],p21[2]);
  line(p21[0],p21[1],p21[2], p22[0],p22[1],p22[2]);
  line(p22[0],p22[1],p22[2], p23[0],p23[1],p23[2]);
  line(p23[0],p23[1],p23[2], p24[0],p24[1],p24[2]);
  line(p24[0],p24[1],p24[2], p25[0],p25[1],p25[2]);
  line(p25[0],p25[1],p25[2], p26[0],p26[1],p26[2]);
  line(p26[0],p26[1],p26[2], p27[0],p27[1],p27[2]);
  line(p27[0],p27[1],p27[2], p28[0],p28[1],p28[2]);
  line(p28[0],p28[1],p28[2], p29[0],p29[1],p29[2]);
  line(p29[0],p29[1],p29[2], p30[0],p30[1],p30[2]);
  line(p30[0],p30[1],p30[2], p31[0],p31[1],p31[2]);
  line(p31[0],p31[1],p31[2], p32[0],p32[1],p32[2]);
  line(p32[0],p32[1],p32[2], p33[0],p33[1],p33[2]);
  line(p33[0],p33[1],p33[2], p34[0],p34[1],p34[2]);
  line(p34[0],p34[1],p34[2], p35[0],p35[1],p35[2]);
  line(p35[0],p35[1],p35[2], p36[0],p36[1],p36[2]);
  line(p36[0],p36[1],p36[2], p19[0],p19[1],p19[2]);
  
  /* Connection BACK & FRONT */
  line(p1[0],p1[1],p1[2], p19[0],p19[1],p19[2]);   
  line(p2[0],p2[1],p2[2], p20[0],p20[1],p20[2]);   
  line(p3[0],p3[1],p3[2], p21[0],p21[1],p21[2]);   
  line(p4[0],p4[1],p4[2], p22[0],p22[1],p22[2]);   
  line(p5[0],p5[1],p5[2], p23[0],p23[1],p23[2]);   
  line(p6[0],p6[1],p6[2], p24[0],p24[1],p24[2]);    
  line(p7[0],p7[1],p7[2], p25[0],p25[1],p25[2]);   
  line(p8[0],p8[1],p8[2], p26[0],p26[1],p26[2]);   
  line(p9[0],p9[1],p9[2], p27[0],p27[1],p27[2]);
  line(p10[0],p10[1],p10[2], p28[0],p28[1],p28[2]);
  line(p11[0],p11[1],p11[2], p29[0],p29[1],p29[2]);
  line(p12[0],p12[1],p12[2], p30[0],p30[1],p30[2]);
  line(p13[0],p13[1],p13[2], p31[0],p31[1],p31[2]);
  line(p14[0],p14[1],p14[2], p32[0],p32[1],p32[2]);
  line(p15[0],p15[1],p15[2], p33[0],p33[1],p33[2]);
  line(p16[0],p16[1],p16[2], p34[0],p34[1],p34[2]);
  line(p17[0],p17[1],p17[2], p35[0],p35[1],p35[2]);
  line(p18[0],p18[1],p18[2], p36[0],p36[1],p36[2]);
  
  
  
  
}  


void character()
{
  /* BACK */
  line(p37[0],p37[1],p37[2], p38[0],p38[1],p38[2]);
  line(p38[0],p38[1],p38[2], p39[0],p39[1],p39[2]);
  line(p39[0],p39[1],p39[2], p40[0],p40[1],p40[2]);
  line(p40[0],p40[1],p40[2], p41[0],p41[1],p41[2]);
  line(p41[0],p41[1],p41[2], p42[0],p42[1],p42[2]);
  line(p42[0],p42[1],p42[2], p43[0],p43[1],p43[2]);
  line(p43[0],p43[1],p43[2], p44[0],p44[1],p44[2]);
  line(p44[0],p44[1],p44[2], p45[0],p45[1],p45[2]);
  line(p45[0],p45[1],p45[2], p46[0],p46[1],p46[2]);
  line(p46[0],p46[1],p46[2], p47[0],p47[1],p47[2]);
  line(p47[0],p47[1],p47[2], p48[0],p48[1],p48[2]);
  line(p48[0],p48[1],p48[2], p49[0],p49[1],p49[2]);
  line(p49[0],p49[1],p49[2], p50[0],p50[1],p50[2]);
  line(p50[0],p50[1],p50[2], p51[0],p51[1],p51[2]);
  line(p51[0],p51[1],p51[2], p52[0],p52[1],p52[2]);
  line(p52[0],p52[1],p52[2], p37[0],p37[1],p37[2]);
  
  /* FRONT */
  line(p53[0],p53[1],p53[2], p54[0],p54[1],p54[2]);
  line(p54[0],p54[1],p54[2], p55[0],p55[1],p55[2]);
  line(p55[0],p55[1],p55[2], p56[0],p56[1],p56[2]);
  line(p56[0],p56[1],p56[2], p57[0],p57[1],p57[2]);
  line(p57[0],p57[1],p57[2], p58[0],p58[1],p58[2]);
  line(p58[0],p58[1],p58[2], p59[0],p59[1],p59[2]);
  line(p59[0],p59[1],p59[2], p60[0],p60[1],p60[2]);
  line(p60[0],p60[1],p60[2], p61[0],p61[1],p61[2]);
  line(p61[0],p61[1],p61[2], p62[0],p62[1],p62[2]);
  line(p62[0],p62[1],p62[2], p63[0],p63[1],p63[2]);
  line(p63[0],p63[1],p63[2], p64[0],p64[1],p64[2]);
  line(p64[0],p64[1],p64[2], p65[0],p65[1],p65[2]);
  line(p65[0],p65[1],p65[2], p66[0],p66[1],p66[2]);
  line(p66[0],p66[1],p66[2], p67[0],p67[1],p67[2]);
  line(p67[0],p67[1],p67[2], p68[0],p68[1],p68[2]);
  line(p68[0],p68[1],p68[2], p53[0],p53[1],p53[2]);
  
  
  /* Connecting BACK & FRONT */
  line(p37[0],p37[1],p37[2], p53[0],p53[1],p53[2]);
  line(p38[0],p38[1],p38[2], p54[0],p54[1],p54[2]);
  line(p39[0],p39[1],p39[2], p55[0],p55[1],p55[2]);
  line(p40[0],p40[1],p40[2], p56[0],p56[1],p56[2]);
  line(p41[0],p41[1],p41[2], p57[0],p57[1],p57[2]);
  line(p42[0],p42[1],p42[2], p58[0],p58[1],p58[2]);
  line(p43[0],p43[1],p43[2], p59[0],p59[1],p59[2]);
  line(p44[0],p44[1],p44[2], p60[0],p60[1],p60[2]);
  line(p45[0],p45[1],p45[2], p61[0],p61[1],p61[2]);
  line(p46[0],p46[1],p46[2], p62[0],p62[1],p62[2]);
  line(p47[0],p47[1],p47[2], p63[0],p63[1],p63[2]);
  line(p48[0],p48[1],p48[2], p64[0],p64[1],p64[2]);
  line(p49[0],p49[1],p49[2], p65[0],p65[1],p65[2]);
  line(p50[0],p50[1],p50[2], p66[0],p66[1],p66[2]);
  line(p51[0],p51[1],p51[2], p67[0],p67[1],p67[2]);
  line(p52[0],p52[1],p52[2], p68[0],p68[1],p68[2]);
  
  
}

void skateBoard()
{
  /* BACK */
  line(p69[0],p69[1],p69[2], p70[0],p70[1],p70[2]);
  line(p70[0],p70[1],p70[2], p71[0],p71[1],p71[2]);
  line(p71[0],p71[1],p71[2], p72[0],p72[1],p72[2]);
  line(p72[0],p72[1],p72[2], p73[0],p73[1],p73[2]);
  line(p73[0],p73[1],p73[2], p74[0],p74[1],p74[2]);
  line(p74[0],p74[1],p74[2], p75[0],p75[1],p75[2]);
  line(p75[0],p75[1],p75[2], p76[0],p76[1],p76[2]);
  line(p76[0],p76[1],p76[2], p69[0],p69[1],p69[2]);
  
  /* FRONT */
  line(p77[0],p77[1],p77[2], p78[0],p78[1],p78[2]);
  line(p78[0],p78[1],p78[2], p79[0],p79[1],p79[2]);
  line(p79[0],p79[1],p79[2], p80[0],p80[1],p80[2]);
  line(p80[0],p80[1],p80[2], p81[0],p81[1],p81[2]);
  line(p81[0],p81[1],p81[2], p82[0],p82[1],p82[2]);
  line(p82[0],p82[1],p82[2], p83[0],p83[1],p83[2]);
  line(p83[0],p83[1],p83[2], p84[0],p84[1],p84[2]);
  line(p84[0],p84[1],p84[2], p77[0],p77[1],p77[2]);
  
  /* CONNECTING */
  line(p69[0],p69[1],p69[2], p77[0],p77[1],p77[2]);
  line(p70[0],p70[1],p70[2], p78[0],p78[1],p78[2]);
  line(p71[0],p71[1],p71[2], p79[0],p79[1],p79[2]);
  line(p72[0],p72[1],p72[2], p80[0],p80[1],p80[2]);
  line(p73[0],p73[1],p73[2], p81[0],p81[1],p81[2]);
  line(p74[0],p74[1],p74[2], p82[0],p82[1],p82[2]);
  line(p75[0],p75[1],p75[2], p83[0],p83[1],p83[2]);
  line(p76[0],p76[1],p76[2], p84[0],p84[1],p84[2]);
   
}
